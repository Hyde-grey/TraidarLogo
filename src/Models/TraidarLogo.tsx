/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/Models/TraidarLogo/TraidarLogo.glb --typescript 
*/

import { useGLTF } from "@react-three/drei";
import type { ThreeElements } from "@react-three/fiber";
import * as THREE from "three";
import { useGlassControls } from "../hooks/useSceneControls";

type GLTFResult = {
  nodes: {
    Mesh_0: THREE.Mesh;
  };
  materials: {
    Material_0: THREE.Material;
  };
};

export function TraidarLogo(props: ThreeElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/Models/TraidarLogo/TraidarLogo.glb"
  ) as unknown as GLTFResult;

  const glassControls = useGlassControls();
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Mesh_0.geometry}
        material={
          new THREE.MeshPhysicalMaterial({
            color: "white",
            transmission: glassControls.transmission,
            thickness: glassControls.thickness,
            roughness: glassControls.roughness,
            metalness: 0.0,
            ior: glassControls.ior,
            clearcoat: glassControls.clearcoat,
            clearcoatRoughness: glassControls.clearcoatRoughness,
          })
        }
        rotation={[-Math.PI, 0, 0]}
        scale={0.01}
        castShadow
        receiveShadow
      />
    </group>
  );
}

useGLTF.preload("/Models/TraidarLogo/TraidarLogo.glb");
